# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Compilar y correr las pruebas unitarias
- script: sudo mkdir /home/vsts/.ssh
- script: sudo chown vsts:root /home/vsts/.ssh
- script: (umask  077 ; echo $ID_AZURE | base64 --decode --ignore-garbage > /home/vsts/.ssh/id_azure)
- script: (umask  077 ; echo $ID_CHEF | base64 --decode --ignore-garbage > /home/vsts/.ssh/jescobar8711.pem)
- script: touch /home/vsts/.ssh/known_hosts
- script: ssh-keyscan -H -t rsa 13.84.202.197  >> /home/vsts/.ssh/known_hosts
- script: ssh -i ~/.ssh/id_azure azureuser@13.84.202.197 "sudo systemctl stop gcs-app"
- script: ssh -i ~/.ssh/id_azure azureuser@13.84.202.197 "sudo systemctl stop nginx"
- script:  knife ssh -i /home/vsts/.ssh/jescobar8711.pem "name:webserver-01" "sudo chef-client" -x azureuser -i /home/vsts/.ssh/id_azure  --attribute cloud.public_ipv4
- script: sbt compile
- script: sbt test
  displayName: 'Commit Check Phase'
- script:  echo Correr las pruebas de integraci√≥n
  displayName: 'Integration Tests'
- script: sbt rpm:packageBin
- script: scp -i ssh -i /home/vsts/.ssh/id_azure /home/vsts/work/1/s/gcs-app/target/rpm/RPMS/noarch/gcs-app-2.8.x-1.noarch.rpm azureuser@13.84.202.197:/home/azureuser
- script: ssh -i ~/.ssh/id_azure azureuser@13.84.202.197 "sudo rpm -ev gcs-app-2.8.x-1.noarch"
- script: ssh -i ~/.ssh/id_azure azureuser@13.84.202.197 "sudo rpm -i gcs-app-2.8.x-1.noarch.rpm"
- script: ssh -i ~/.ssh/id_azure azureuser@13.84.202.197 "sudo systemctl start gcs-app"
- script: ssh -i ~/.ssh/id_azure azureuser@13.84.202.197 "sudo systemctl start nginx"
  displayName: 'Deploy Phase'
